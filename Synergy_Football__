local m = game.Players.LocalPlayer local o = m:GetMouse() local dp_ = game:GetService("\85\115\101\114\73\110\112\117\116\83\101\114\118\105\99\101") local g = game:GetService("\67\111\110\116\101\120\116\65\99\116\105\111\110\83\101\114\118\105\99\101") local j = game:GetService("\82\117\110\83\101\114\118\105\99\101") local n = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101") local _ = TweenInfo.new local p = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101") local dp = false local fd = game:GetService("\67\111\110\116\101\120\116\65\99\116\105\111\110\83\101\114\118\105\99\101") local a = game:GetService("\80\108\97\121\101\114\115") local r = a.LocalPlayer local q = {} configs_menu = { ["\79\112\101\110\77\101\110\117"] = Enum.KeyCode.Insert } local kq = {} local e = { Background = Color3.fromRGB(24, 24, 24),  Glow = Color3.fromRGB(0, 0, 0),  Accent = Color3.fromRGB(10, 10, 10),  LightContrast = Color3.fromRGB(20, 20, 20),  DarkContrast = Color3.fromRGB(14, 14, 14),   TextColor = Color3.fromRGB(255, 255, 255) } do function q:Create(instance, properties, children) local h = Instance.new(instance) for i, v in pairs(properties or {}) do h[i] = v if typeof(v) == "\67\111\108\111\114\51" then  local lh = q:Find(e, v) if lh then kq[lh] = kq[lh] or {} kq[lh][i] = kq[lh][i] or setmetatable({}, {_mode = "\107"}) table.insert(kq[lh][i], h) end end end for i, module in pairs(children or {}) do module.Parent = h end return h end function q:Tween(instance, properties, duration, ...) n:Create(instance, _(duration, ...), properties):Play() end function q:Wait() j.RenderStepped:Wait() return true end function q:Find(table, dp_nj)  for i, v in  pairs(table) do if v == dp_nj then return i end end end function q:Sort(pattern, values) local il = {} pattern = pattern:lower() if pattern == "" then return values end for i, dp_nj in pairs(values) do if tostring(dp_nj):lower():find(pattern) then table.insert(il, dp_nj) end end return il end function q:Pop(h, shrink) local ti = h:Clone() ti.AnchorPoint = Vector2.new(0.5, 0.5) ti.Size = ti.Size - UDim2.new(0, shrink, 0, shrink) ti.Position = UDim2.new(0.5, 0, 0.5, 0) ti.Parent = h ti:ClearAllChildren() h.ImageTransparency = 1 q:Tween(ti, {Size = h.Size}, 0.2) spawn(function() wait(0.2) h.ImageTransparency = 0 ti:Destroy() end) return ti end function q:InitializeKeybind() self.keybinds = {} self.ended = {} dp_.InputBegan:Connect(function(kqra,d) if self.keybinds[kqra.KeyCode] and not d then for i, som in pairs(self.keybinds[kqra.KeyCode]) do som() end end end) dp_.InputEnded:Connect(function(kqra) if kqra.UserInputType == Enum.UserInputType.MouseButton1 then for i, njgs in pairs(self.ended) do njgs() end end end) end function q:BindToKey(kqra, njgs) self.keybinds[kqra] = self.keybinds[kqra] or {} table.insert(self.keybinds[kqra], njgs) return { UnBind = function() for i, som in pairs(self.keybinds[kqra]) do if som == njgs then table.remove(self.keybinds[kqra], i) end end end } end function q:KeyPressed()  local kqra = dp_.InputBegan:Wait() while kqra.UserInputType ~= Enum.UserInputType.Keyboard  do kqra = dp_.InputBegan:Wait() end wait()  return kqra end function q:DraggingEnabled(kqr, parent) parent = parent or kqr local s = false local om, mousePos, framePos kqr.InputBegan:Connect(function(dp_) if dp_.UserInputType == Enum.UserInputType.MouseButton1 then s = true mousePos = dp_.Position framePos = parent.Position dp_.Changed:Connect(function() if dp_.UserInputState == Enum.UserInputState.End then s = false end end) end end) kqr.InputChanged:Connect(function(dp_) if dp_.UserInputType == Enum.UserInputType.MouseMovement then om = dp_ end end) dp_.InputChanged:Connect(function(dp_) if dp_ == om and s then local so = dp_.Position - mousePos parent.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + so.X, framePos.Y.Scale, framePos.Y.Offset + so.Y) end end) end function q:DraggingEnded(njgs) table.insert(self.ended, njgs) end end local gs = nil local jg = {}  local ra = {} local ekqra = {} do jg.__index = jg ra.__index = ra ekqra.__index = ekqra function jg.new(title) local ek = q:Create("\83\99\114\101\101\110\71\117\105", { Name = title, Parent = game.CoreGui, },  { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\77\97\105\110", BackgroundTransparency = 1, Position = UDim2.new(0.25, 0, 0.052435593, 0), Size = UDim2.new(0, 511, 0, 428), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\54\52\49\49\52\57\53\53\52", ImageColor3 = e.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296) }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71\108\111\119", BackgroundTransparency = 1, Position = UDim2.new(0, -15, 0, -15), Size = UDim2.new(1, 30, 1, 30), ZIndex = 0, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\48\56\52", ImageColor3 = e.Glow, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(24, 24, 276, 276) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\80\97\103\101\115", BackgroundTransparency = 1, ClipsDescendants = true, Position = UDim2.new(0, 0, 0, 38), Size = UDim2.new(0, 126, 1, -38), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\52\50\55\51", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296) }, { q:Create("\83\99\114\111\108\108\105\110\103\70\114\97\109\101", { Name = "\80\97\103\101\115\95\67\111\110\116\97\105\110\101\114", Active = true, BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 10), Size = UDim2.new(1, 0, 1, -20), CanvasSize = UDim2.new(0, 0, 0, 314), ScrollBarThickness = 0 }, { q:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 10) }) }) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\84\111\112\66\97\114", BackgroundTransparency = 1, ClipsDescendants = true, Size = UDim2.new(1, 0, 0, 38), ZIndex = 5, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\53\57\53\50\56\54\57\51\51", ImageColor3 = e.Accent, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296) }, { q:Create("\84\101\120\116\76\97\98\101\108", {  Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 12, 0, 19), Size = UDim2.new(1, -46, 0, 16), ZIndex = 5, Font = Enum.Font.GothamBold, Text = title, TextColor3 = e.TextColor, TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }) }) }) }) gs = ek print(gs) q:InitializeKeybind() q:DraggingEnabled(ek.Main.TopBar, ek.Main) return setmetatable({ ek = ek, pagesContainer = ek.Main.Pages.Pages_Container, pages = {} }, jg) end function ra.new(jg, title, icon) local qraf = q:Create("\84\101\120\116\66\117\116\116\111\110", { Name = title, Parent = jg.pagesContainer, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 26), ZIndex = 3, AutoButtonColor = false, Font = Enum.Font.Gotham, Text = "", TextSize = 14 }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 40, 0.5, 0), Size = UDim2.new(0, 76, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.65, TextXAlignment = Enum.TextXAlignment.Left }), icon and q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\73\99\111\110",  AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 12, 0.5, 0), Size = UDim2.new(0, 16, 0, 16), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47" .. tostring(icon), ImageColor3 = e.TextColor, ImageTransparency = 0.64 }) or {} }) local ek = q:Create("\83\99\114\111\108\108\105\110\103\70\114\97\109\101", { Name = title, Parent = jg.container.Main, Active = true, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 134, 0, 46), Size = UDim2.new(1, -142, 1, -56), CanvasSize = UDim2.new(0, 0, 0, 466), ScrollBarThickness = 3, ScrollBarImageColor3 = e.DarkContrast, Visible = false }, { q:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 10) }) }) return setmetatable({ jg = jg, ek = ek, qraf = qraf, sections = {} }, ra) end function ekqra.new(ra, title) local ek = q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = title, Parent = ra.container, BackgroundTransparency = 1, Size = UDim2.new(1, -10, 0, 28), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296), ClipsDescendants = true }, { q:Create("\70\114\97\109\101", { Name = "\67\111\110\116\97\105\110\101\114", Active = true, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 8, 0, 8), Size = UDim2.new(1, -16, 1, -16) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 20), ZIndex = 2, Font = Enum.Font.GothamSemibold, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextXAlignment = Enum.TextXAlignment.Left, TextTransparency = 1 }), q:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 4) }) }) }) return setmetatable({ ra = ra, ek = ek.Container, colorpickers = {}, modules = {}, binds = {}, lists = {}, }, ekqra)  end function jg:addPage(...) local ra = ra.new(self, ...) local qraf = ra.button table.insert(self.pages, ra) qraf.MouseButton1Click:Connect(function() self:SelectPage(ra, true) end) return ra end function ra:addSection(...) local ekqra = ekqra.new(self, ...) table.insert(self.sections, ekqra) return ekqra end function jg:setTheme(lh, _nj) e[lh] = _nj for property, kq in pairs(kq[lh]) do for i, h in pairs(kq) do if not h.Parent or (h.Name == "\66\117\116\116\111\110" and h.Parent.Name == "\67\111\108\111\114\80\105\99\107\101\114") then kq[i] = nil  else h[property] = _nj end end end end function jg:kqraf() if self.toggling then return end self.toggling = true local ek = self.container.Main local he = ek.TopBar if self.position then q:Tween(ek, { Size = UDim2.new(0, 511, 0, 428), Position = self.position }, 0.2) wait(0.2) q:Tween(he, {Size = UDim2.new(1, 0, 0, 38)}, 0.2) wait(0.2) ek.ClipsDescendants = false self.position = nil else self.position = ek.Position ek.ClipsDescendants = true q:Tween(he, {Size = UDim2.new(1, 0, 1, 0)}, 0.2) wait(0.2) q:Tween(ek, { Size = UDim2.new(0, 511, 0, 0), Position = self.position + UDim2.new(0, 0, 0, 428) }, 0.2) wait(0.2) end self.toggling = false end function jg:Notify(title, omcti, njgs) if self.activeNotification then self.activeNotification = self.activeNotification() end local lhe = q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\78\111\116\105\102\105\99\97\116\105\111\110", Parent = self.container, BackgroundTransparency = 1, Size = UDim2.new(0, 200, 0, 60), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296), ZIndex = 3, ClipsDescendants = true }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\70\108\97\115\104", Size = UDim2.new(1, 0, 1, 0), BackgroundTransparency = 1, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\54\52\49\49\52\57\53\53\52", ImageColor3 = e.TextColor, ZIndex = 5 }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71\108\111\119", BackgroundTransparency = 1, Position = UDim2.new(0, -15, 0, -15), Size = UDim2.new(1, 30, 1, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\48\56\52", ImageColor3 = e.Glow, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(24, 24, 276, 276) }), q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 8), Size = UDim2.new(1, -40, 0, 16), ZIndex = 4, Font = Enum.Font.GothamSemibold, TextColor3 = e.TextColor, TextSize = 14.000, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 1, -24), Size = UDim2.new(1, -40, 0, 16), ZIndex = 4, Font = Enum.Font.Gotham, TextColor3 = e.TextColor, TextSize = 12.000, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\65\99\99\101\112\116", BackgroundTransparency = 1, Position = UDim2.new(1, -26, 0, 8), Size = UDim2.new(0, 16, 0, 16), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\56\50\53\57", ImageColor3 = e.TextColor, ZIndex = 4 }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\68\101\99\108\105\110\101", BackgroundTransparency = 1, Position = UDim2.new(1, -26, 1, -24), Size = UDim2.new(0, 16, 0, 16), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\56\53\56\51", ImageColor3 = e.TextColor, ZIndex = 4 }) }) q:DraggingEnabled(lhe) title = title or "\78\111\116\105\102\105\99\97\116\105\111\110" omcti = omcti or "" lhe.Title.Text = title lhe.Text.Text = omcti local ilh = 10 local til = game:GetService("\84\101\120\116\83\101\114\118\105\99\101"):GetTextSize(omcti, 12, Enum.Font.Gotham, Vector2.new(math.huge, 16)) lhe.Position = jg.lastNotification or UDim2.new(0, ilh, 1, -(lhe.AbsoluteSize.Y + ilh)) lhe.Size = UDim2.new(0, 0, 0, 60) q:Tween(lhe, {Size = UDim2.new(0, til.X + 70, 0, 60)}, 0.2) wait(0.2) lhe.ClipsDescendants = false q:Tween(lhe.Flash, { Size = UDim2.new(0, 0, 0, 60), Position = UDim2.new(1, 0, 0, 0) }, 0.2) local nj = true local mct = function() if not nj then return end nj = false lhe.ClipsDescendants = true jg.lastNotification = lhe.Position lhe.Flash.Position = UDim2.new(0, 0, 0, 0) q:Tween(lhe.Flash, {Size = UDim2.new(1, 0, 1, 0)}, 0.2) wait(0.2) q:Tween(lhe, { Size = UDim2.new(0, 0, 0, 60), Position = lhe.Position + UDim2.new(0, til.X + 70, 0, 0) }, 0.2) wait(0.2) lhe:Destroy() end self.activeNotification = mct lhe.Accept.MouseButton1Click:Connect(function() if not nj then  return end if njgs then njgs(true) end mct() end) lhe.Decline.MouseButton1Click:Connect(function() if not nj then  return end if njgs then njgs(false) end mct() end) end function ekqra:addButton(title, njgs) local qraf = q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.10000000149012 }) }) table.insert(self.modules, qraf) local omcti = qraf.Title local gso qraf.MouseButton1Click:Connect(function() if gso then return end q:Pop(qraf, 10) gso = true omcti.TextSize = 0 q:Tween(qraf.Title, {TextSize = 14}, 0.2) wait(0.2) q:Tween(qraf.Title, {TextSize = 12}, 0.2) if njgs then njgs(function(...) self:updateButton(qraf, ...) end) end gso = false end) return qraf end function ekqra:addToggle(title, default, njgs) local kqraf = q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\84\111\103\103\108\101", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) },{ q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(0.5, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -50, 0.5, -8), Size = UDim2.new(0, 40, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\70\114\97\109\101", BackgroundTransparency = 1, Position = UDim2.new(0, 2, 0.5, -6), Size = UDim2.new(1, -22, 1, -4), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.TextColor, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }) }) }) table.insert(self.modules, kqraf) local nj = default self:updateToggle(kqraf, nil, nj) kqraf.MouseButton1Click:Connect(function() nj = not nj self:updateToggle(kqraf, nil, nj) if njgs then njgs(nj, function(...) self:updateToggle(kqraf, ...) end) end end) return kqraf end function ekqra:addTextbox(title, default, njgs) local ct = q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\84\101\120\116\98\111\120", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(0.5, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, Position = UDim2.new(1, -110, 0.5, -8), Size = UDim2.new(0, 100, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120",  BackgroundTransparency = 1, TextTruncate = Enum.TextTruncate.AtEnd, Position = UDim2.new(0, 5, 0, 0), Size = UDim2.new(1, -10, 1, 0), ZIndex = 3, Font = Enum.Font.GothamSemibold, Text = default or "", TextColor3 = e.TextColor, TextSize = 11 }) }) }) table.insert(self.modules, ct) local qraf = ct.Button local dp_ = qraf.Textbox ct.MouseButton1Click:Connect(function() if ct.Button.Size ~= UDim2.new(0, 100, 0, 16) then return end q:Tween(ct.Button, { Size = UDim2.new(0, 200, 0, 16), Position = UDim2.new(1, -210, 0.5, -8) }, 0.2) wait() dp_.TextXAlignment = Enum.TextXAlignment.Left dp_:CaptureFocus() end) dp_:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() if qraf.ImageTransparency == 0 and (qraf.Size == UDim2.new(0, 200, 0, 16) or qraf.Size == UDim2.new(0, 100, 0, 16)) then  q:Pop(qraf, 10) end if njgs then njgs(dp_.Text, nil, function(...) self:updateTextbox(ct, ...) end) end end) dp_.FocusLost:Connect(function() dp_.TextXAlignment = Enum.TextXAlignment.Center q:Tween(ct.Button, { Size = UDim2.new(0, 100, 0, 16), Position = UDim2.new(1, -110, 0.5, -8) }, 0.2) if njgs then njgs(dp_.Text, true, function(...) self:updateTextbox(ct, ...) end) end end) return ct end function ekqra:addKeybind(title, default, njgs, changedCallback) local f = q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\75\101\121\98\105\110\100", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, Position = UDim2.new(1, -110, 0.5, -8), Size = UDim2.new(0, 100, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, ClipsDescendants = true, Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.GothamSemibold, Text = default and default.Name or "\78\111\110\101", TextColor3 = e.TextColor, TextSize = 11 }) }) }) table.insert(self.modules, f) local omcti = f.Button.Text local qraf = f.Button local qr = function() if qraf.ImageTransparency == 0 then q:Pop(qraf, 10) end end self.binds[f] = {njgs = function() qr() if njgs then njgs(function(...) self:updateKeybind(f, ...) end) end end} if default and njgs then self:updateKeybind(f, nil, default) end f.MouseButton1Click:Connect(function() qr() if self.binds[f].connection then  return self:updateKeybind(f) end if omcti.Text == "\78\111\110\101" then  omcti.Text = "\46\46\46" local kqra = q:KeyPressed() self:updateKeybind(f, nil, kqra.KeyCode) qr() if changedCallback then changedCallback(kqra, function(...) self:updateKeybind(f, ...) end) end end end) return f end function ekqra:addColorPicker(title, default, njgs) local ekq = q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\111\108\111\114\80\105\99\107\101\114", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) },{ q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(0.5, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -50, 0.5, -7), Size = UDim2.new(0, 40, 0, 14), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = Color3.fromRGB(255, 255, 255), ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }) }) local jgs = q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\67\111\108\111\114\80\105\99\107\101\114", Parent = self.page.library.container, BackgroundTransparency = 1, Position = UDim2.new(0.75, 0, 0.400000006, 0), Selectable = true, AnchorPoint = Vector2.new(0.5, 0.5), Size = UDim2.new(0, 162, 0, 169), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298), Visible = false, }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71\108\111\119", BackgroundTransparency = 1, Position = UDim2.new(0, -15, 0, -15), Size = UDim2.new(1, 30, 1, 30), ZIndex = 0, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\48\56\52", ImageColor3 = e.Glow, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(22, 22, 278, 278) }), q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 8), Size = UDim2.new(1, -40, 0, 16), ZIndex = 2, Font = Enum.Font.GothamSemibold, Text = title, TextColor3 = e.TextColor, TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\108\111\115\101", BackgroundTransparency = 1, Position = UDim2.new(1, -26, 0, 8), Size = UDim2.new(0, 16, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\56\53\56\51", ImageColor3 = e.TextColor }),  q:Create("\70\114\97\109\101", { Name = "\67\111\110\116\97\105\110\101\114", BackgroundTransparency = 1, Position = UDim2.new(0, 8, 0, 32), Size = UDim2.new(1, -18, 1, -40) }, { q:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 6) }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\97\110\118\97\115", BackgroundTransparency = 1, BorderColor3 = e.LightContrast, Size = UDim2.new(1, 0, 0, 60), AutoButtonColor = false, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\56\53\51\53\51\50\48", ImageColor3 = Color3.fromRGB(255, 0, 0), ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\87\104\105\116\101\95\79\118\101\114\108\97\121", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 60), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\55\49\53\50\51\53\49", SliceCenter = Rect.new(2, 2, 298, 298) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\108\97\99\107\95\79\118\101\114\108\97\121", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 60), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\55\49\53\50\48\57\53", SliceCenter = Rect.new(2, 2, 298, 298) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\67\117\114\115\111\114", BackgroundColor3 = e.TextColor, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundTransparency = 1.000, Size = UDim2.new(0, 10, 0, 10), Position = UDim2.new(0, 0, 0, 0), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\48\49\49\53\57\54\50", SliceCenter = Rect.new(2, 2, 298, 298) }) }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\111\108\111\114", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 0, 0, 4), Selectable = false, Size = UDim2.new(1, 0, 0, 16), ZIndex = 2, AutoButtonColor = false, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\70\114\97\109\101", { Name = "\83\101\108\101\99\116", BackgroundColor3 = e.TextColor, BorderSizePixel = 1, Position = UDim2.new(1, 0, 0, 0), Size = UDim2.new(0, 2, 1, 0), ZIndex = 2 }), q:Create("\85\73\71\114\97\100\105\101\110\116", {  Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),  ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)),  ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),  ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 255, 255)),  ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),  ColorSequenceKeypoint.new(0.82, Color3.fromRGB(255, 0, 255)),  ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0)) }) }) }), q:Create("\70\114\97\109\101", { Name = "\73\110\112\117\116\115", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 158), Size = UDim2.new(1, 0, 0, 16) }, { q:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { FillDirection = Enum.FillDirection.Horizontal, SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 6) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\82", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(0.305, 0, 1, 0), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Size = UDim2.new(0.400000006, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\82\58", TextColor3 = e.TextColor, TextSize = 10.000 }), q:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120", BackgroundTransparency = 1, Position = UDim2.new(0.300000012, 0, 0, 0), Size = UDim2.new(0.600000024, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, PlaceholderColor3 = e.DarkContrast, Text = "\50\53\53", TextColor3 = e.TextColor, TextSize = 10.000 }) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(0.305, 0, 1, 0), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, ZIndex = 2, Size = UDim2.new(0.400000006, 0, 1, 0), Font = Enum.Font.Gotham, Text = "\71\58", TextColor3 = e.TextColor, TextSize = 10.000 }), q:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120", BackgroundTransparency = 1, Position = UDim2.new(0.300000012, 0, 0, 0), Size = UDim2.new(0.600000024, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\50\53\53", TextColor3 = e.TextColor, TextSize = 10.000 }) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(0.305, 0, 1, 0), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Size = UDim2.new(0.400000006, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\66\58", TextColor3 = e.TextColor, TextSize = 10.000 }), q:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120", BackgroundTransparency = 1, Position = UDim2.new(0.300000012, 0, 0, 0), Size = UDim2.new(0.600000024, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\50\53\53", TextColor3 = e.TextColor, TextSize = 10.000 }) }), }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 20), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = "\83\117\98\109\105\116", TextColor3 = e.TextColor, TextSize = 11.000 }) }) }) }) q:DraggingEnabled(jgs) table.insert(self.modules, ekq) local tilhe = { [""] = true } local ilhe = jgs.Container.Canvas local tilh = jgs.Container.Color local c, canvasPosition = ilhe.AbsoluteSize, ilhe.AbsolutePosition local mcti, colorPosition = tilh.AbsoluteSize, tilh.AbsolutePosition local omc, draggingCanvas local _nj = default or Color3.fromRGB(255, 255, 255) local p_, sat, brightness = 0, 0, 1 local jgso = { r = 255, g = 255, b = 255 } self.colorpickers[ekq] = { jgs = jgs, njgs = function(k, dp_nj) jgso[k] = dp_nj p_, sat, brightness = Color3.toHSV(Color3.fromRGB(jgso.r, jgso.g, jgso.b)) end } local njgs = function(dp_nj) if njgs then njgs(dp_nj, function(...) self:updateColorPicker(ekq, ...) end) end end q:DraggingEnded(function() omc, draggingCanvas = false, false end) if default then self:updateColorPicker(ekq, nil, default) p_, sat, brightness = Color3.toHSV(default) default = Color3.fromHSV(p_, sat, brightness) for i, k in pairs({"\114", "\103", "\98"}) do jgso[k] = default[k:upper()] * 255 end end for i, ek in pairs(jgs.Container.Inputs:GetChildren()) do  if ek:IsA("\73\109\97\103\101\76\97\98\101\108") then local ct = ek.Textbox local p_n ct.Focused:Connect(function() p_n = true end) ct.FocusLost:Connect(function() p_n = false if not tonumber(ct.Text) then ct.Text = math.floor(jgso[ek.Name:lower()]) end end) ct:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() local omcti = ct.Text if not tilhe[omcti] and not tonumber(omcti) then ct.Text = omcti:sub(1, #omcti - 1) elseif p_n and not tilhe[omcti] then jgso[ek.Name:lower()] = math.clamp(tonumber(ct.Text), 0, 255) local _nj = Color3.fromRGB(jgso.r, jgso.g, jgso.b) p_, sat, brightness = Color3.toHSV(_nj) self:updateColorPicker(ekq, nil, _nj) njgs(_nj) end end) end end ilhe.MouseButton1Down:Connect(function() draggingCanvas = true while draggingCanvas do local rafd, y = o.X, o.Y sat = math.clamp((rafd - canvasPosition.X) / c.X, 0, 1) brightness = 1 - math.clamp((y - canvasPosition.Y) / c.Y, 0, 1) _nj = Color3.fromHSV(p_, sat, brightness) for i, k in pairs({"\114", "\103", "\98"}) do jgso[k] = _nj[k:upper()] * 255 end self:updateColorPicker(ekq, nil, {p_, sat, brightness})  q:Tween(ilhe.Cursor, {Position = UDim2.new(sat, 0, 1 - brightness, 0)}, 0.1)  njgs(_nj) q:Wait() end end) tilh.MouseButton1Down:Connect(function() omc = true while omc do p_ = 1 - math.clamp(1 - ((o.X - colorPosition.X) / mcti.X), 0, 1) _nj = Color3.fromHSV(p_, sat, brightness) for i, k in pairs({"\114", "\103", "\98"}) do jgso[k] = _nj[k:upper()] * 255 end local rafd = p_  self:updateColorPicker(ekq, nil, {p_, sat, brightness})  q:Tween(jgs.Container.Color.Select, {Position = UDim2.new(rafd, 0, 0, 0)}, 0.1)  njgs(_nj) q:Wait() end end) local qraf = ekq.Button local kqraf, gso, qr lastColor = Color3.fromHSV(p_, sat, brightness) qr = function(l, i) if i then if not kqraf then return end if gso then while gso do q:Wait() end end elseif not i then if gso then  return  end if qraf.ImageTransparency == 0 then q:Pop(qraf, 10) end end kqraf = l gso = true if l then if self.page.library.activePicker and self.page.library.activePicker ~= qr then self.page.library.activePicker(nil, true) end self.page.library.activePicker = qr lastColor = Color3.fromHSV(p_, sat, brightness) local ekqr, x2 = qraf.AbsoluteSize.X / 2, 162 local hekq, py = qraf.AbsolutePosition.X, qraf.AbsolutePosition.Y jgs.ClipsDescendants = true jgs.Visible = true jgs.Size = UDim2.new(0, 0, 0, 0) jgs.Position = UDim2.new(0, ekqr + x2 + hekq, 0, py) q:Tween(jgs, {Size = UDim2.new(0, 162, 0, 169)}, 0.2) wait(0.2) jgs.ClipsDescendants = false c, canvasPosition = ilhe.AbsoluteSize, ilhe.AbsolutePosition mcti, colorPosition = tilh.AbsoluteSize, tilh.AbsolutePosition else q:Tween(jgs, {Size = UDim2.new(0, 0, 0, 0)}, 0.2) jgs.ClipsDescendants = true wait(0.2) jgs.Visible = false end gso = false end local lhekq = function() qr(not kqraf) end qraf.MouseButton1Click:Connect(lhekq) ekq.MouseButton1Click:Connect(lhekq) jgs.Container.Button.MouseButton1Click:Connect(function() qr() end) jgs.Close.MouseButton1Click:Connect(function() self:updateColorPicker(ekq, nil, lastColor) qr() end) return ekq end function ekqra:addSlider(title, default, min, max, njgs) local ilhek = q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\83\108\105\100\101\114", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0.292817682, 0, 0.299145311, 0), Size = UDim2.new(1, 0, 0, 50), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 6), Size = UDim2.new(0.5, 0, 0, 16), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\66\111\120", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -30, 0, 6), Size = UDim2.new(0, 20, 0, 16), ZIndex = 3, Font = Enum.Font.GothamSemibold, Text = default or min, TextColor3 = e.TextColor, TextSize = 12, TextXAlignment = Enum.TextXAlignment.Right }), q:Create("\84\101\120\116\76\97\98\101\108", { Name = "\83\108\105\100\101\114", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 28), Size = UDim2.new(1, -20, 0, 16), ZIndex = 3, Text = "", }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\97\114", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0.5, 0), Size = UDim2.new(1, 0, 0, 4), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\70\105\108\108", BackgroundTransparency = 1, Size = UDim2.new(0.8, 0, 1, 0), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.TextColor, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\67\105\114\99\108\101", AnchorPoint = Vector2.new(0.5, 0.5), BackgroundTransparency = 1, ImageTransparency = 1.000, ImageColor3 = e.TextColor, Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 10, 0, 10), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\54\48\56\48\50\48\48\53\52" }) }) }) }) }) table.insert(self.modules, ilhek) local tilhe = { [""] = true, ["\45"] = true } local ct = ilhek.TextBox local mctil = ilhek.Slider.Bar.Fill.Circle local dp_nj = default or min local s, last local njgs = function(dp_nj) if njgs then njgs(dp_nj, function(...) self:updateSlider(ilhek, ...) end) end end self:updateSlider(ilhek, nil, dp_nj, min, max) q:DraggingEnded(function() s = false end) ilhek.MouseButton1Down:Connect(function(dp_) s = true while s do q:Tween(mctil, {ImageTransparency = 0}, 0.1) dp_nj = self:updateSlider(ilhek, nil, nil, min, max, dp_nj) njgs(dp_nj) q:Wait() end wait(0.5) q:Tween(mctil, {ImageTransparency = 1}, 0.2) end) ct.FocusLost:Connect(function() if not tonumber(ct.Text) then dp_nj = self:updateSlider(ilhek, nil, default or min, min, max) njgs(dp_nj) end end) ct:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() local omcti = ct.Text if not tilhe[omcti] and not tonumber(omcti) then ct.Text = omcti:sub(1, #omcti - 1) elseif not tilhe[omcti] then  dp_nj = self:updateSlider(ilhek, nil, tonumber(omcti) or dp_nj, min, max) njgs(dp_nj) end end) return ilhek end function ekqra:addDropdown(title, dp_n, njgs) local njg = q:Create("\70\114\97\109\101", { Name = "\68\114\111\112\100\111\119\110", Parent = self.container, BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 30), ClipsDescendants = true }, { q:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 4) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\83\101\97\114\99\104", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\66\111\120", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, TextTruncate = Enum.TextTruncate.AtEnd, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(1, -42, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = e.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -28, 0.5, -9), Size = UDim2.new(0, 18, 0, 18), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\57\52\48\51", ImageColor3 = e.TextColor, SliceCenter = Rect.new(2, 2, 298, 298) }) }), q:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\76\105\115\116", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 1, -34), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\83\99\114\111\108\108\105\110\103\70\114\97\109\101", { Name = "\70\114\97\109\101", Active = true, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 4, 0, 4), Size = UDim2.new(1, -8, 1, -8), CanvasPosition = Vector2.new(0, 28), CanvasSize = UDim2.new(0, 0, 0, 120), ZIndex = 2, ScrollBarThickness = 3, ScrollBarImageColor3 = e.DarkContrast }, { q:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 4) }) }) }) }) table.insert(self.modules, njg) local _n = njg.Search local p_n dp_n = dp_n or {} _n.Button.MouseButton1Click:Connect(function() if _n.Button.Rotation == 0 then self:updateDropdown(njg, nil, dp_n, njgs) else self:updateDropdown(njg, nil, nil, njgs) end end) _n.TextBox.Focused:Connect(function() if _n.Button.Rotation == 0 then self:updateDropdown(njg, nil, dp_n, njgs) end p_n = true end) _n.TextBox.FocusLost:Connect(function() p_n = false end) _n.TextBox:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() if p_n then local dp_n = q:Sort(_n.TextBox.Text, dp_n) dp_n = #dp_n ~= 0 and dp_n  self:updateDropdown(njg, nil, dp_n, njgs) end end) njg:GetPropertyChangedSignal("\83\105\122\101"):Connect(function() self:Resize() end) return njg end function jg:SelectPage(ra, kqraf) if kqraf and self.focusedPage == ra then  return end local qraf = ra.button if kqraf then qraf.Title.TextTransparency = 0 qraf.Title.Font = Enum.Font.GothamSemibold if qraf:FindFirstChild("\73\99\111\110") then qraf.Icon.ImageTransparency = 0 end local af = self.focusedPage self.focusedPage = ra if af then self:SelectPage(af) end local raf = af and #af.sections or 0 local qra = #ra.sections - raf ra:Resize() for i, ekqra in pairs(ra.sections) do ekqra.container.Parent.ImageTransparency = 0 end if qra < 0 then  for i = raf, #ra.sections + 1, -1 do local ekqra = af.sections[i].container.Parent q:Tween(ekqra, {ImageTransparency = 1}, 0.1) end end wait(0.1) ra.container.Visible = true if af then af.container.Visible = false end if qra > 0 then  for i = raf + 1, #ra.sections do local ekqra = ra.sections[i].container.Parent ekqra.ImageTransparency = 1 q:Tween(ekqra, {ImageTransparency = 0}, 0.05) end end wait(0.05) for i, ekqra in pairs(ra.sections) do q:Tween(ekqra.container.Title, {TextTransparency = 0}, 0.1) ekqra:Resize(true) wait(0.05) end wait(0.05) ra:Resize(true) else qraf.Title.Font = Enum.Font.Gotham qraf.Title.TextTransparency = 0.65 if qraf:FindFirstChild("\73\99\111\110") then qraf.Icon.ImageTransparency = 0.65 end for i, ekqra in pairs(ra.sections) do  q:Tween(ekqra.container.Parent, {Size = UDim2.new(1, -10, 0, 28)}, 0.1) q:Tween(ekqra.container.Title, {TextTransparency = 1}, 0.1) end wait(0.1) ra.lastPosition = ra.container.CanvasPosition.Y ra:Resize() end end function ra:Resize(scroll) local ilh = 10 local t = 0 for i, ekqra in pairs(self.sections) do t = t + ekqra.container.Parent.AbsoluteSize.Y + ilh end self.container.CanvasSize = UDim2.new(0, 0, 0, t) self.container.ScrollBarImageTransparency = t > self.container.AbsoluteSize.Y if scroll then q:Tween(self.container, {CanvasPosition = Vector2.new(0, self.lastPosition or 0)}, 0.2) end end function ekqra:Resize(smooth) if self.page.library.focusedPage ~= self.page then return end local ilh = 4 local t = (4 * ilh) + self.container.Title.AbsoluteSize.Y  for i, module in pairs(self.modules) do t = t + module.AbsoluteSize.Y + ilh end if smooth then q:Tween(self.container.Parent, {Size = UDim2.new(1, -10, 0, t)}, 0.05) else self.container.Parent.Size = UDim2.new(1, -10, 0, t) self.page:Resize() end end function ekqra:getModule(info) if table.find(self.modules, info) then return info end for i, module in pairs(self.modules) do if (module:FindFirstChild("\84\105\116\108\101") or module:FindFirstChild("\84\101\120\116\66\111\120", true)).Text == info then return module end end error("\78\111\32\109\111\100\117\108\101\32\102\111\117\110\100\32\117\110\100\101\114\32"..tostring(info)) end function ekqra:updateButton(qraf, title) qraf = self:getModule(qraf) qraf.Title.Text = title end function ekqra:updateToggle(kqraf, title, dp_nj) kqraf = self:getModule(kqraf) local cti = { In = UDim2.new(0, 2, 0.5, -6), Out = UDim2.new(0, 20, 0.5, -6) } local kqr = kqraf.Button.Frame dp_nj = dp_nj and "\79\117\116" or "\73\110" if title then kqraf.Title.Text = title end q:Tween(kqr, { Size = UDim2.new(1, -22, 1, -9), Position = cti[dp_nj] + UDim2.new(0, 0, 0, 2.5) }, 0.2) wait(0.1) q:Tween(kqr, { Size = UDim2.new(1, -22, 1, -4), Position = cti[dp_nj] }, 0.1) end function ekqra:updateTextbox(ct, title, dp_nj) ct = self:getModule(ct) if title then ct.Title.Text = title end if dp_nj then ct.Button.Textbox.Text = dp_nj end end function ekqra:updateKeybind(f, title, kqra) f = self:getModule(f) local omcti = f.Button.Text local som = self.binds[f] if title then f.Title.Text = title end if som.connection then som.connection = som.connection:UnBind() end if kqra then self.binds[f].connection = q:BindToKey(kqra, som.callback) omcti.Text = kqra.Name else omcti.Text = "\78\111\110\101" end return kqra end function ekqra:updateColorPicker(ekq, title, tilh) ekq = self:getModule(ekq) local gsomct = self.colorpickers[ekq] local jgs = gsomct.tab local njgs = gsomct.callback if title then ekq.Title.Text = title jgs.Title.Text = title end local _nj local p_, sat, brightness if type(tilh) == "\116\97\98\108\101" then  p_, sat, brightness = unpack(tilh) _nj = Color3.fromHSV(p_, sat, brightness) else _nj = tilh p_, sat, brightness = Color3.toHSV(_nj) end q:Tween(ekq.Button, {ImageColor3 = _nj}, 0.5) q:Tween(jgs.Container.Color.Select, {Position = UDim2.new(p_, 0, 0, 0)}, 0.1) q:Tween(jgs.Container.Canvas, {ImageColor3 = Color3.fromHSV(p_, 1, 1)}, 0.5) q:Tween(jgs.Container.Canvas.Cursor, {Position = UDim2.new(sat, 0, 1 - brightness)}, 0.5) for i, ek in pairs(jgs.Container.Inputs:GetChildren()) do if ek:IsA("\73\109\97\103\101\76\97\98\101\108") then local dp_nj = math.clamp(_nj[ek.Name], 0, 1) * 255 ek.Textbox.Text = math.floor(dp_nj) end end end function ekqra:updateSlider(ilhek, title, dp_nj, min, max, lvalue) ilhek = self:getModule(ilhek) if title then ilhek.Title.Text = title end local fdp = ilhek.Slider.Bar local afd = (o.X - fdp.AbsolutePosition.X) / fdp.AbsoluteSize.X if dp_nj then  afd = (dp_nj - min) / (max - min) end afd = math.clamp(afd, 0, 1) dp_nj = dp_nj or math.floor(min + (max - min) * afd) ilhek.TextBox.Text = dp_nj q:Tween(fdp.Fill, {Size = UDim2.new(afd, 0, 1, 0)}, 0.1) if dp_nj ~= lvalue and ilhek.ImageTransparency == 0 then q:Pop(ilhek, 10) end return dp_nj end function ekqra:updateDropdown(njg, title, dp_n, njgs) njg = self:getModule(njg) if title then njg.Search.TextBox.Text = title end local rafdp = 0 q:Pop(njg.Search, 10) for i, qraf in pairs(njg.List.Frame:GetChildren()) do if qraf:IsA("\73\109\97\103\101\66\117\116\116\111\110") then qraf:Destroy() end end for i, dp_nj in pairs(dp_n or {}) do local qraf = q:Create("\73\109\97\103\101\66\117\116\116\111\110", { Parent = njg.List.Frame, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = e.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { q:Create("\84\101\120\116\76\97\98\101\108", { BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 0), Size = UDim2.new(1, -10, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = dp_nj, TextColor3 = e.TextColor, TextSize = 12, TextXAlignment = "\76\101\102\116", TextTransparency = 0.10000000149012 }) }) qraf.MouseButton1Click:Connect(function() if njgs then njgs(dp_nj, function(...) self:updateDropdown(njg, ...) end)  end self:updateDropdown(njg, dp_nj, nil, njgs) end) rafdp = rafdp + 1 end local kqr = njg.List.Frame q:Tween(njg, {Size = UDim2.new(1, 0, 0, (rafdp == 0 and 30) or math.clamp(rafdp, 0, 3) * 34 + 38)}, 0.3) q:Tween(njg.Search.Button, {Rotation = dp_n and 180 or 0}, 0.3) if rafdp > 3 then for i, qraf in pairs(njg.List.Frame:GetChildren()) do if qraf:IsA("\73\109\97\103\101\66\117\116\116\111\110") then qraf.Size = UDim2.new(1, -6, 0, 30) end end kqr.CanvasSize = UDim2.new(0, 0, 0, (rafdp * 34) - 4) kqr.ScrollBarImageTransparency = 0 else kqr.CanvasSize = UDim2.new(0, 0, 0, 0) kqr.ScrollBarImageTransparency = 1 end end end return library
