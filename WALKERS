local t = game.Players.LocalPlayer local p = t:GetMouse() local lb_ = game:GetService("\85\115\101\114\73\110\112\117\116\83\101\114\118\105\99\101") local o = game:GetService("\67\111\110\116\101\120\116\65\99\116\105\111\110\83\101\114\118\105\99\101") local i = game:GetService("\82\117\110\83\101\114\118\105\99\101") local j = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101") local _ = TweenInfo.new local b = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101") local lb = false local rl = game:GetService("\67\111\110\116\101\120\116\65\99\116\105\111\110\83\101\114\118\105\99\101") local s = game:GetService("\80\108\97\121\101\114\115") local q = s.LocalPlayer local a = {} configs_menu = { ["\79\112\101\110\77\101\110\117"] = Enum.KeyCode.E } local ca = {} local k = { Background = Color3.fromRGB(24, 24, 24),  Glow = Color3.fromRGB(0, 0, 0),  Accent = Color3.fromRGB(10, 10, 10),  LightContrast = Color3.fromRGB(20, 20, 20),  DarkContrast = Color3.fromRGB(14, 14, 14),   TextColor = Color3.fromRGB(255, 255, 255) } do function a:Create(instance, properties, children) local m = Instance.new(instance) for i, v in pairs(properties or {}) do m[i] = v if typeof(v) == "\67\111\108\111\114\51" then  local dm = a:Find(k, v) if dm then ca[dm] = ca[dm] or {} ca[dm][i] = ca[dm][i] or setmetatable({}, {_mode = "\107"}) table.insert(ca[dm][i], m) end end end for i, module in pairs(children or {}) do module.Parent = m end return m end function a:Tween(instance, properties, duration, ...) j:Create(instance, _(duration, ...), properties):Play() end function a:Wait() i.RenderStepped:Wait() return true end function a:Find(table, lb_ji)  for i, v in  pairs(table) do if v == lb_ji then return i end end end function a:Sort(pattern, values) local nd = {} pattern = pattern:lower() if pattern == "" then return values end for i, lb_ji in pairs(values) do if tostring(lb_ji):lower():find(pattern) then table.insert(nd, lb_ji) end end return nd end function a:Pop(m, shrink) local gn = m:Clone() gn.AnchorPoint = Vector2.new(0.5, 0.5) gn.Size = gn.Size - UDim2.new(0, shrink, 0, shrink) gn.Position = UDim2.new(0.5, 0, 0.5, 0) gn.Parent = m gn:ClearAllChildren() m.ImageTransparency = 1 a:Tween(gn, {Size = m.Size}, 0.2) spawn(function() wait(0.2) m.ImageTransparency = 0 gn:Destroy() end) return gn end function a:InitializeKeybind() self.keybinds = {} self.ended = {} lb_.InputBegan:Connect(function(caqs,l) if self.keybinds[caqs.KeyCode] and not l then for i, fpt in pairs(self.keybinds[caqs.KeyCode]) do fpt() end end end) lb_.InputEnded:Connect(function(caqs) if caqs.UserInputType == Enum.UserInputType.MouseButton1 then for i, jiof in pairs(self.ended) do jiof() end end end) end function a:BindToKey(caqs, jiof) self.keybinds[caqs] = self.keybinds[caqs] or {} table.insert(self.keybinds[caqs], jiof) return { UnBind = function() for i, fpt in pairs(self.keybinds[caqs]) do if fpt == jiof then table.remove(self.keybinds[caqs], i) end end end } end function a:KeyPressed()  local caqs = lb_.InputBegan:Wait() while caqs.UserInputType ~= Enum.UserInputType.Keyboard  do caqs = lb_.InputBegan:Wait() end wait()  return caqs end function a:DraggingEnabled(caq, parent) parent = parent or caq local f = false local pt, mousePos, framePos caq.InputBegan:Connect(function(lb_) if lb_.UserInputType == Enum.UserInputType.MouseButton1 then f = true mousePos = lb_.Position framePos = parent.Position lb_.Changed:Connect(function() if lb_.UserInputState == Enum.UserInputState.End then f = false end end) end end) caq.InputChanged:Connect(function(lb_) if lb_.UserInputType == Enum.UserInputType.MouseMovement then pt = lb_ end end) lb_.InputChanged:Connect(function(lb_) if lb_ == pt and f then local fp = lb_.Position - mousePos parent.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + fp.X, framePos.Y.Scale, framePos.Y.Offset + fp.Y) end end) end function a:DraggingEnded(jiof) table.insert(self.ended, jiof) end end local of = nil local io = {}  local qs = {} local kcaqs = {} do io.__index = io qs.__index = qs kcaqs.__index = kcaqs function io.new(title) local kc = a:Create("\83\99\114\101\101\110\71\117\105", { Name = title, Parent = game.CoreGui, },  { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\77\97\105\110", BackgroundTransparency = 1, Position = UDim2.new(0.25, 0, 0.052435593, 0), Size = UDim2.new(0, 511, 0, 428), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\54\52\49\49\52\57\53\53\52", ImageColor3 = k.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296) }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71\108\111\119", BackgroundTransparency = 1, Position = UDim2.new(0, -15, 0, -15), Size = UDim2.new(1, 30, 1, 30), ZIndex = 0, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\48\56\52", ImageColor3 = k.Glow, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(24, 24, 276, 276) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\80\97\103\101\115", BackgroundTransparency = 1, ClipsDescendants = true, Position = UDim2.new(0, 0, 0, 38), Size = UDim2.new(0, 126, 1, -38), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\52\50\55\51", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296) }, { a:Create("\83\99\114\111\108\108\105\110\103\70\114\97\109\101", { Name = "\80\97\103\101\115\95\67\111\110\116\97\105\110\101\114", Active = true, BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0, 10), Size = UDim2.new(1, 0, 1, -20), CanvasSize = UDim2.new(0, 0, 0, 314), ScrollBarThickness = 0 }, { a:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 10) }) }) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\84\111\112\66\97\114", BackgroundTransparency = 1, ClipsDescendants = true, Size = UDim2.new(1, 0, 0, 38), ZIndex = 5, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\53\57\53\50\56\54\57\51\51", ImageColor3 = k.Accent, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296) }, { a:Create("\84\101\120\116\76\97\98\101\108", {  Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 12, 0, 19), Size = UDim2.new(1, -46, 0, 16), ZIndex = 5, Font = Enum.Font.GothamBold, Text = title, TextColor3 = k.TextColor, TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }) }) }) }) of = kc print(of) a:InitializeKeybind() a:DraggingEnabled(kc.Main.TopBar, kc.Main) return setmetatable({ kc = kc, pagesContainer = kc.Main.Pages.Pages_Container, pages = {} }, io) end function qs.new(io, title, icon) local aqsr = a:Create("\84\101\120\116\66\117\116\116\111\110", { Name = title, Parent = io.pagesContainer, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 26), ZIndex = 3, AutoButtonColor = false, Font = Enum.Font.Gotham, Text = "", TextSize = 14 }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 40, 0.5, 0), Size = UDim2.new(0, 76, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.65, TextXAlignment = Enum.TextXAlignment.Left }), icon and a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\73\99\111\110",  AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 12, 0.5, 0), Size = UDim2.new(0, 16, 0, 16), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47" .. tostring(icon), ImageColor3 = k.TextColor, ImageTransparency = 0.64 }) or {} }) local kc = a:Create("\83\99\114\111\108\108\105\110\103\70\114\97\109\101", { Name = title, Parent = io.container.Main, Active = true, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 134, 0, 46), Size = UDim2.new(1, -142, 1, -56), CanvasSize = UDim2.new(0, 0, 0, 466), ScrollBarThickness = 3, ScrollBarImageColor3 = k.DarkContrast, Visible = false }, { a:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 10) }) }) return setmetatable({ io = io, kc = kc, aqsr = aqsr, sections = {} }, qs) end function kcaqs.new(qs, title) local kc = a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = title, Parent = qs.container, BackgroundTransparency = 1, Size = UDim2.new(1, -10, 0, 28), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296), ClipsDescendants = true }, { a:Create("\70\114\97\109\101", { Name = "\67\111\110\116\97\105\110\101\114", Active = true, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 8, 0, 8), Size = UDim2.new(1, -16, 1, -16) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 20), ZIndex = 2, Font = Enum.Font.GothamSemibold, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextXAlignment = Enum.TextXAlignment.Left, TextTransparency = 1 }), a:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 4) }) }) }) return setmetatable({ qs = qs, kc = kc.Container, colorpickers = {}, modules = {}, binds = {}, lists = {}, }, kcaqs)  end function io:addPage(...) local qs = qs.new(self, ...) local aqsr = qs.button table.insert(self.pages, qs) aqsr.MouseButton1Click:Connect(function() self:SelectPage(qs, true) end) return qs end function qs:addSection(...) local kcaqs = kcaqs.new(self, ...) table.insert(self.sections, kcaqs) return kcaqs end function io:setTheme(dm, _ji) k[dm] = _ji for property, ca in pairs(ca[dm]) do for i, m in pairs(ca) do if not m.Parent or (m.Name == "\66\117\116\116\111\110" and m.Parent.Name == "\67\111\108\111\114\80\105\99\107\101\114") then ca[i] = nil  else m[property] = _ji end end end end function io:caqsr() if self.toggling then return end self.toggling = true local kc = self.container.Main local mk = kc.TopBar if self.position then a:Tween(kc, { Size = UDim2.new(0, 511, 0, 428), Position = self.position }, 0.2) wait(0.2) a:Tween(mk, {Size = UDim2.new(1, 0, 0, 38)}, 0.2) wait(0.2) kc.ClipsDescendants = false self.position = nil else self.position = kc.Position kc.ClipsDescendants = true a:Tween(mk, {Size = UDim2.new(1, 0, 1, 0)}, 0.2) wait(0.2) a:Tween(kc, { Size = UDim2.new(0, 511, 0, 0), Position = self.position + UDim2.new(0, 0, 0, 428) }, 0.2) wait(0.2) end self.toggling = false end function io:Notify(title, pthgn, jiof) if self.activeNotification then self.activeNotification = self.activeNotification() end local dmk = a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\78\111\116\105\102\105\99\97\116\105\111\110", Parent = self.container, BackgroundTransparency = 1, Size = UDim2.new(0, 200, 0, 60), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(4, 4, 296, 296), ZIndex = 3, ClipsDescendants = true }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\70\108\97\115\104", Size = UDim2.new(1, 0, 1, 0), BackgroundTransparency = 1, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\54\52\49\49\52\57\53\53\52", ImageColor3 = k.TextColor, ZIndex = 5 }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71\108\111\119", BackgroundTransparency = 1, Position = UDim2.new(0, -15, 0, -15), Size = UDim2.new(1, 30, 1, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\48\56\52", ImageColor3 = k.Glow, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(24, 24, 276, 276) }), a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 8), Size = UDim2.new(1, -40, 0, 16), ZIndex = 4, Font = Enum.Font.GothamSemibold, TextColor3 = k.TextColor, TextSize = 14.000, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 1, -24), Size = UDim2.new(1, -40, 0, 16), ZIndex = 4, Font = Enum.Font.Gotham, TextColor3 = k.TextColor, TextSize = 12.000, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\65\99\99\101\112\116", BackgroundTransparency = 1, Position = UDim2.new(1, -26, 0, 8), Size = UDim2.new(0, 16, 0, 16), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\56\50\53\57", ImageColor3 = k.TextColor, ZIndex = 4 }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\68\101\99\108\105\110\101", BackgroundTransparency = 1, Position = UDim2.new(1, -26, 1, -24), Size = UDim2.new(0, 16, 0, 16), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\56\53\56\51", ImageColor3 = k.TextColor, ZIndex = 4 }) }) a:DraggingEnabled(dmk) title = title or "\78\111\116\105\102\105\99\97\116\105\111\110" pthgn = pthgn or "" dmk.Title.Text = title dmk.Text.Text = pthgn local ndm = 10 local gnd = game:GetService("\84\101\120\116\83\101\114\118\105\99\101"):GetTextSize(pthgn, 12, Enum.Font.Gotham, Vector2.new(math.huge, 16)) dmk.Position = io.lastNotification or UDim2.new(0, ndm, 1, -(dmk.AbsoluteSize.Y + ndm)) dmk.Size = UDim2.new(0, 0, 0, 60) a:Tween(dmk, {Size = UDim2.new(0, gnd.X + 70, 0, 60)}, 0.2) wait(0.2) dmk.ClipsDescendants = false a:Tween(dmk.Flash, { Size = UDim2.new(0, 0, 0, 60), Position = UDim2.new(1, 0, 0, 0) }, 0.2) local ji = true local thg = function() if not ji then return end ji = false dmk.ClipsDescendants = true io.lastNotification = dmk.Position dmk.Flash.Position = UDim2.new(0, 0, 0, 0) a:Tween(dmk.Flash, {Size = UDim2.new(1, 0, 1, 0)}, 0.2) wait(0.2) a:Tween(dmk, { Size = UDim2.new(0, 0, 0, 60), Position = dmk.Position + UDim2.new(0, gnd.X + 70, 0, 0) }, 0.2) wait(0.2) dmk:Destroy() end self.activeNotification = thg dmk.Accept.MouseButton1Click:Connect(function() if not ji then  return end if jiof then jiof(true) end thg() end) dmk.Decline.MouseButton1Click:Connect(function() if not ji then  return end if jiof then jiof(false) end thg() end) end function kcaqs:addButton(title, jiof) local aqsr = a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.10000000149012 }) }) table.insert(self.modules, aqsr) local pthgn = aqsr.Title local ofp aqsr.MouseButton1Click:Connect(function() if ofp then return end a:Pop(aqsr, 10) ofp = true pthgn.TextSize = 0 a:Tween(aqsr.Title, {TextSize = 14}, 0.2) wait(0.2) a:Tween(aqsr.Title, {TextSize = 12}, 0.2) if jiof then jiof(function(...) self:updateButton(aqsr, ...) end) end ofp = false end) return aqsr end function kcaqs:addToggle(title, default, jiof) local caqsr = a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\84\111\103\103\108\101", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) },{ a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(0.5, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -50, 0.5, -8), Size = UDim2.new(0, 40, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\70\114\97\109\101", BackgroundTransparency = 1, Position = UDim2.new(0, 2, 0.5, -6), Size = UDim2.new(1, -22, 1, -4), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.TextColor, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }) }) }) table.insert(self.modules, caqsr) local ji = default self:updateToggle(caqsr, nil, ji) caqsr.MouseButton1Click:Connect(function() ji = not ji self:updateToggle(caqsr, nil, ji) if jiof then jiof(ji, function(...) self:updateToggle(caqsr, ...) end) end end) return caqsr end function kcaqs:addTextbox(title, default, jiof) local hg = a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\84\101\120\116\98\111\120", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(0.5, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, Position = UDim2.new(1, -110, 0.5, -8), Size = UDim2.new(0, 100, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120",  BackgroundTransparency = 1, TextTruncate = Enum.TextTruncate.AtEnd, Position = UDim2.new(0, 5, 0, 0), Size = UDim2.new(1, -10, 1, 0), ZIndex = 3, Font = Enum.Font.GothamSemibold, Text = default or "", TextColor3 = k.TextColor, TextSize = 11 }) }) }) table.insert(self.modules, hg) local aqsr = hg.Button local lb_ = aqsr.Textbox hg.MouseButton1Click:Connect(function() if hg.Button.Size ~= UDim2.new(0, 100, 0, 16) then return end a:Tween(hg.Button, { Size = UDim2.new(0, 200, 0, 16), Position = UDim2.new(1, -210, 0.5, -8) }, 0.2) wait() lb_.TextXAlignment = Enum.TextXAlignment.Left lb_:CaptureFocus() end) lb_:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() if aqsr.ImageTransparency == 0 and (aqsr.Size == UDim2.new(0, 200, 0, 16) or aqsr.Size == UDim2.new(0, 100, 0, 16)) then  a:Pop(aqsr, 10) end if jiof then jiof(lb_.Text, nil, function(...) self:updateTextbox(hg, ...) end) end end) lb_.FocusLost:Connect(function() lb_.TextXAlignment = Enum.TextXAlignment.Center a:Tween(hg.Button, { Size = UDim2.new(0, 100, 0, 16), Position = UDim2.new(1, -110, 0.5, -8) }, 0.2) if jiof then jiof(lb_.Text, true, function(...) self:updateTextbox(hg, ...) end) end end) return hg end function kcaqs:addKeybind(title, default, jiof, changedCallback) local r = a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\75\101\121\98\105\110\100", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, Position = UDim2.new(1, -110, 0.5, -8), Size = UDim2.new(0, 100, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, ClipsDescendants = true, Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.GothamSemibold, Text = default and default.Name or "\78\111\110\101", TextColor3 = k.TextColor, TextSize = 11 }) }) }) table.insert(self.modules, r) local pthgn = r.Button.Text local aqsr = r.Button local aq = function() if aqsr.ImageTransparency == 0 then a:Pop(aqsr, 10) end end self.binds[r] = {jiof = function() aq() if jiof then jiof(function(...) self:updateKeybind(r, ...) end) end end} if default and jiof then self:updateKeybind(r, nil, default) end r.MouseButton1Click:Connect(function() aq() if self.binds[r].connection then  return self:updateKeybind(r) end if pthgn.Text == "\78\111\110\101" then  pthgn.Text = "\46\46\46" local caqs = a:KeyPressed() self:updateKeybind(r, nil, caqs.KeyCode) aq() if changedCallback then changedCallback(caqs, function(...) self:updateKeybind(r, ...) end) end end end) return r end function kcaqs:addColorPicker(title, default, jiof) local kca = a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\111\108\111\114\80\105\99\107\101\114", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) },{ a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(0.5, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -50, 0.5, -7), Size = UDim2.new(0, 40, 0, 14), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = Color3.fromRGB(255, 255, 255), ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }) }) local iof = a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\67\111\108\111\114\80\105\99\107\101\114", Parent = self.page.library.container, BackgroundTransparency = 1, Position = UDim2.new(0.75, 0, 0.400000006, 0), Selectable = true, AnchorPoint = Vector2.new(0.5, 0.5), Size = UDim2.new(0, 162, 0, 169), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298), Visible = false, }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71\108\111\119", BackgroundTransparency = 1, Position = UDim2.new(0, -15, 0, -15), Size = UDim2.new(1, 30, 1, 30), ZIndex = 0, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\48\56\52", ImageColor3 = k.Glow, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(22, 22, 278, 278) }), a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 8), Size = UDim2.new(1, -40, 0, 16), ZIndex = 2, Font = Enum.Font.GothamSemibold, Text = title, TextColor3 = k.TextColor, TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\108\111\115\101", BackgroundTransparency = 1, Position = UDim2.new(1, -26, 0, 8), Size = UDim2.new(0, 16, 0, 16), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\56\53\56\51", ImageColor3 = k.TextColor }),  a:Create("\70\114\97\109\101", { Name = "\67\111\110\116\97\105\110\101\114", BackgroundTransparency = 1, Position = UDim2.new(0, 8, 0, 32), Size = UDim2.new(1, -18, 1, -40) }, { a:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 6) }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\97\110\118\97\115", BackgroundTransparency = 1, BorderColor3 = k.LightContrast, Size = UDim2.new(1, 0, 0, 60), AutoButtonColor = false, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\56\53\51\53\51\50\48", ImageColor3 = Color3.fromRGB(255, 0, 0), ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\87\104\105\116\101\95\79\118\101\114\108\97\121", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 60), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\55\49\53\50\51\53\49", SliceCenter = Rect.new(2, 2, 298, 298) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\108\97\99\107\95\79\118\101\114\108\97\121", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 60), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\55\49\53\50\48\57\53", SliceCenter = Rect.new(2, 2, 298, 298) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\67\117\114\115\111\114", BackgroundColor3 = k.TextColor, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundTransparency = 1.000, Size = UDim2.new(0, 10, 0, 10), Position = UDim2.new(0, 0, 0, 0), Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\49\48\48\49\49\53\57\54\50", SliceCenter = Rect.new(2, 2, 298, 298) }) }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\67\111\108\111\114", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 0, 0, 4), Selectable = false, Size = UDim2.new(1, 0, 0, 16), ZIndex = 2, AutoButtonColor = false, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\70\114\97\109\101", { Name = "\83\101\108\101\99\116", BackgroundColor3 = k.TextColor, BorderSizePixel = 1, Position = UDim2.new(1, 0, 0, 0), Size = UDim2.new(0, 2, 1, 0), ZIndex = 2 }), a:Create("\85\73\71\114\97\100\105\101\110\116", {  Color = ColorSequence.new({ ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),  ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)),  ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),  ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 255, 255)),  ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),  ColorSequenceKeypoint.new(0.82, Color3.fromRGB(255, 0, 255)),  ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0)) }) }) }), a:Create("\70\114\97\109\101", { Name = "\73\110\112\117\116\115", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 158), Size = UDim2.new(1, 0, 0, 16) }, { a:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { FillDirection = Enum.FillDirection.Horizontal, SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 6) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\82", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(0.305, 0, 1, 0), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Size = UDim2.new(0.400000006, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\82\58", TextColor3 = k.TextColor, TextSize = 10.000 }), a:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120", BackgroundTransparency = 1, Position = UDim2.new(0.300000012, 0, 0, 0), Size = UDim2.new(0.600000024, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, PlaceholderColor3 = k.DarkContrast, Text = "\50\53\53", TextColor3 = k.TextColor, TextSize = 10.000 }) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\71", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(0.305, 0, 1, 0), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, ZIndex = 2, Size = UDim2.new(0.400000006, 0, 1, 0), Font = Enum.Font.Gotham, Text = "\71\58", TextColor3 = k.TextColor, TextSize = 10.000 }), a:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120", BackgroundTransparency = 1, Position = UDim2.new(0.300000012, 0, 0, 0), Size = UDim2.new(0.600000024, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\50\53\53", TextColor3 = k.TextColor, TextSize = 10.000 }) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(0.305, 0, 1, 0), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Size = UDim2.new(0.400000006, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\66\58", TextColor3 = k.TextColor, TextSize = 10.000 }), a:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\98\111\120", BackgroundTransparency = 1, Position = UDim2.new(0.300000012, 0, 0, 0), Size = UDim2.new(0.600000024, 0, 1, 0), ZIndex = 2, Font = Enum.Font.Gotham, Text = "\50\53\53", TextColor3 = k.TextColor, TextSize = 10.000 }) }), }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 20), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\101\120\116", BackgroundTransparency = 1, Size = UDim2.new(1, 0, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = "\83\117\98\109\105\116", TextColor3 = k.TextColor, TextSize = 11.000 }) }) }) }) a:DraggingEnabled(iof) table.insert(self.modules, kca) local gndmk = { [""] = true } local ndmk = iof.Container.Canvas local gndm = iof.Container.Color local h, canvasPosition = ndmk.AbsoluteSize, ndmk.AbsolutePosition local thgn, colorPosition = gndm.AbsoluteSize, gndm.AbsolutePosition local pth, draggingCanvas local _ji = default or Color3.fromRGB(255, 255, 255) local b_, sat, brightness = 0, 0, 1 local iofp = { r = 255, g = 255, b = 255 } self.colorpickers[kca] = { iof = iof, jiof = function(c, lb_ji) iofp[c] = lb_ji b_, sat, brightness = Color3.toHSV(Color3.fromRGB(iofp.r, iofp.g, iofp.b)) end } local jiof = function(lb_ji) if jiof then jiof(lb_ji, function(...) self:updateColorPicker(kca, ...) end) end end a:DraggingEnded(function() pth, draggingCanvas = false, false end) if default then self:updateColorPicker(kca, nil, default) b_, sat, brightness = Color3.toHSV(default) default = Color3.fromHSV(b_, sat, brightness) for i, c in pairs({"\114", "\103", "\98"}) do iofp[c] = default[c:upper()] * 255 end end for i, kc in pairs(iof.Container.Inputs:GetChildren()) do  if kc:IsA("\73\109\97\103\101\76\97\98\101\108") then local hg = kc.Textbox local b_j hg.Focused:Connect(function() b_j = true end) hg.FocusLost:Connect(function() b_j = false if not tonumber(hg.Text) then hg.Text = math.floor(iofp[kc.Name:lower()]) end end) hg:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() local pthgn = hg.Text if not gndmk[pthgn] and not tonumber(pthgn) then hg.Text = pthgn:sub(1, #pthgn - 1) elseif b_j and not gndmk[pthgn] then iofp[kc.Name:lower()] = math.clamp(tonumber(hg.Text), 0, 255) local _ji = Color3.fromRGB(iofp.r, iofp.g, iofp.b) b_, sat, brightness = Color3.toHSV(_ji) self:updateColorPicker(kca, nil, _ji) jiof(_ji) end end) end end ndmk.MouseButton1Down:Connect(function() draggingCanvas = true while draggingCanvas do local qsrl, y = p.X, p.Y sat = math.clamp((qsrl - canvasPosition.X) / h.X, 0, 1) brightness = 1 - math.clamp((y - canvasPosition.Y) / h.Y, 0, 1) _ji = Color3.fromHSV(b_, sat, brightness) for i, c in pairs({"\114", "\103", "\98"}) do iofp[c] = _ji[c:upper()] * 255 end self:updateColorPicker(kca, nil, {b_, sat, brightness})  a:Tween(ndmk.Cursor, {Position = UDim2.new(sat, 0, 1 - brightness, 0)}, 0.1)  jiof(_ji) a:Wait() end end) gndm.MouseButton1Down:Connect(function() pth = true while pth do b_ = 1 - math.clamp(1 - ((p.X - colorPosition.X) / thgn.X), 0, 1) _ji = Color3.fromHSV(b_, sat, brightness) for i, c in pairs({"\114", "\103", "\98"}) do iofp[c] = _ji[c:upper()] * 255 end local qsrl = b_  self:updateColorPicker(kca, nil, {b_, sat, brightness})  a:Tween(iof.Container.Color.Select, {Position = UDim2.new(qsrl, 0, 0, 0)}, 0.1)  jiof(_ji) a:Wait() end end) local aqsr = kca.Button local caqsr, ofp, aq lastColor = Color3.fromHSV(b_, sat, brightness) aq = function(d, n) if n then if not caqsr then return end if ofp then while ofp do a:Wait() end end elseif not n then if ofp then  return  end if aqsr.ImageTransparency == 0 then a:Pop(aqsr, 10) end end caqsr = d ofp = true if d then if self.page.library.activePicker and self.page.library.activePicker ~= aq then self.page.library.activePicker(nil, true) end self.page.library.activePicker = aq lastColor = Color3.fromHSV(b_, sat, brightness) local kcaq, x2 = aqsr.AbsoluteSize.X / 2, 162 local mkca, py = aqsr.AbsolutePosition.X, aqsr.AbsolutePosition.Y iof.ClipsDescendants = true iof.Visible = true iof.Size = UDim2.new(0, 0, 0, 0) iof.Position = UDim2.new(0, kcaq + x2 + mkca, 0, py) a:Tween(iof, {Size = UDim2.new(0, 162, 0, 169)}, 0.2) wait(0.2) iof.ClipsDescendants = false h, canvasPosition = ndmk.AbsoluteSize, ndmk.AbsolutePosition thgn, colorPosition = gndm.AbsoluteSize, gndm.AbsolutePosition else a:Tween(iof, {Size = UDim2.new(0, 0, 0, 0)}, 0.2) iof.ClipsDescendants = true wait(0.2) iof.Visible = false end ofp = false end local dmkca = function() aq(not caqsr) end aqsr.MouseButton1Click:Connect(dmkca) kca.MouseButton1Click:Connect(dmkca) iof.Container.Button.MouseButton1Click:Connect(function() aq() end) iof.Close.MouseButton1Click:Connect(function() self:updateColorPicker(kca, nil, lastColor) aq() end) return kca end function kcaqs:addSlider(title, default, min, max, jiof) local ndmkc = a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\83\108\105\100\101\114", Parent = self.container, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0.292817682, 0, 0.299145311, 0), Size = UDim2.new(1, 0, 0, 50), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\84\105\116\108\101", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 6), Size = UDim2.new(0.5, 0, 0, 16), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\66\111\120", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -30, 0, 6), Size = UDim2.new(0, 20, 0, 16), ZIndex = 3, Font = Enum.Font.GothamSemibold, Text = default or min, TextColor3 = k.TextColor, TextSize = 12, TextXAlignment = Enum.TextXAlignment.Right }), a:Create("\84\101\120\116\76\97\98\101\108", { Name = "\83\108\105\100\101\114", BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 28), Size = UDim2.new(1, -20, 0, 16), ZIndex = 3, Text = "", }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\66\97\114", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0.5, 0), Size = UDim2.new(1, 0, 0, 4), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.LightContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\70\105\108\108", BackgroundTransparency = 1, Size = UDim2.new(0.8, 0, 1, 0), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.TextColor, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\67\105\114\99\108\101", AnchorPoint = Vector2.new(0.5, 0.5), BackgroundTransparency = 1, ImageTransparency = 1.000, ImageColor3 = k.TextColor, Position = UDim2.new(1, 0, 0.5, 0), Size = UDim2.new(0, 10, 0, 10), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\52\54\48\56\48\50\48\48\53\52" }) }) }) }) }) table.insert(self.modules, ndmkc) local gndmk = { [""] = true, ["\45"] = true } local hg = ndmkc.TextBox local thgnd = ndmkc.Slider.Bar.Fill.Circle local lb_ji = default or min local f, last local jiof = function(lb_ji) if jiof then jiof(lb_ji, function(...) self:updateSlider(ndmkc, ...) end) end end self:updateSlider(ndmkc, nil, lb_ji, min, max) a:DraggingEnded(function() f = false end) ndmkc.MouseButton1Down:Connect(function(lb_) f = true while f do a:Tween(thgnd, {ImageTransparency = 0}, 0.1) lb_ji = self:updateSlider(ndmkc, nil, nil, min, max, lb_ji) jiof(lb_ji) a:Wait() end wait(0.5) a:Tween(thgnd, {ImageTransparency = 1}, 0.2) end) hg.FocusLost:Connect(function() if not tonumber(hg.Text) then lb_ji = self:updateSlider(ndmkc, nil, default or min, min, max) jiof(lb_ji) end end) hg:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() local pthgn = hg.Text if not gndmk[pthgn] and not tonumber(pthgn) then hg.Text = pthgn:sub(1, #pthgn - 1) elseif not gndmk[pthgn] then  lb_ji = self:updateSlider(ndmkc, nil, tonumber(pthgn) or lb_ji, min, max) jiof(lb_ji) end end) return ndmkc end function kcaqs:addDropdown(title, lb_j, jiof) local jio = a:Create("\70\114\97\109\101", { Name = "\68\114\111\112\100\111\119\110", Parent = self.container, BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 30), ClipsDescendants = true }, { a:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 4) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\83\101\97\114\99\104", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\66\111\120", { Name = "\84\101\120\116\66\111\120", AnchorPoint = Vector2.new(0, 0.5), BackgroundTransparency = 1, TextTruncate = Enum.TextTruncate.AtEnd, Position = UDim2.new(0, 10, 0.5, 1), Size = UDim2.new(1, -42, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = title, TextColor3 = k.TextColor, TextSize = 12, TextTransparency = 0.10000000149012, TextXAlignment = Enum.TextXAlignment.Left }), a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Name = "\66\117\116\116\111\110", BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(1, -28, 0.5, -9), Size = UDim2.new(0, 18, 0, 18), ZIndex = 3, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\49\50\53\51\57\52\48\51", ImageColor3 = k.TextColor, SliceCenter = Rect.new(2, 2, 298, 298) }) }), a:Create("\73\109\97\103\101\76\97\98\101\108", { Name = "\76\105\115\116", BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 1, -34), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.Background, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\83\99\114\111\108\108\105\110\103\70\114\97\109\101", { Name = "\70\114\97\109\101", Active = true, BackgroundTransparency = 1, BorderSizePixel = 0, Position = UDim2.new(0, 4, 0, 4), Size = UDim2.new(1, -8, 1, -8), CanvasPosition = Vector2.new(0, 28), CanvasSize = UDim2.new(0, 0, 0, 120), ZIndex = 2, ScrollBarThickness = 3, ScrollBarImageColor3 = k.DarkContrast }, { a:Create("\85\73\76\105\115\116\76\97\121\111\117\116", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 4) }) }) }) }) table.insert(self.modules, jio) local _j = jio.Search local b_j lb_j = lb_j or {} _j.Button.MouseButton1Click:Connect(function() if _j.Button.Rotation == 0 then self:updateDropdown(jio, nil, lb_j, jiof) else self:updateDropdown(jio, nil, nil, jiof) end end) _j.TextBox.Focused:Connect(function() if _j.Button.Rotation == 0 then self:updateDropdown(jio, nil, lb_j, jiof) end b_j = true end) _j.TextBox.FocusLost:Connect(function() b_j = false end) _j.TextBox:GetPropertyChangedSignal("\84\101\120\116"):Connect(function() if b_j then local lb_j = a:Sort(_j.TextBox.Text, lb_j) lb_j = #lb_j ~= 0 and lb_j  self:updateDropdown(jio, nil, lb_j, jiof) end end) jio:GetPropertyChangedSignal("\83\105\122\101"):Connect(function() self:Resize() end) return jio end function io:SelectPage(qs, caqsr) if caqsr and self.focusedPage == qs then  return end local aqsr = qs.button if caqsr then aqsr.Title.TextTransparency = 0 aqsr.Title.Font = Enum.Font.GothamSemibold if aqsr:FindFirstChild("\73\99\111\110") then aqsr.Icon.ImageTransparency = 0 end local sr = self.focusedPage self.focusedPage = qs if sr then self:SelectPage(sr) end local qsr = sr and #sr.sections or 0 local aqs = #qs.sections - qsr qs:Resize() for i, kcaqs in pairs(qs.sections) do kcaqs.container.Parent.ImageTransparency = 0 end if aqs < 0 then  for i = qsr, #qs.sections + 1, -1 do local kcaqs = sr.sections[i].container.Parent a:Tween(kcaqs, {ImageTransparency = 1}, 0.1) end end wait(0.1) qs.container.Visible = true if sr then sr.container.Visible = false end if aqs > 0 then  for i = qsr + 1, #qs.sections do local kcaqs = qs.sections[i].container.Parent kcaqs.ImageTransparency = 1 a:Tween(kcaqs, {ImageTransparency = 0}, 0.05) end end wait(0.05) for i, kcaqs in pairs(qs.sections) do a:Tween(kcaqs.container.Title, {TextTransparency = 0}, 0.1) kcaqs:Resize(true) wait(0.05) end wait(0.05) qs:Resize(true) else aqsr.Title.Font = Enum.Font.Gotham aqsr.Title.TextTransparency = 0.65 if aqsr:FindFirstChild("\73\99\111\110") then aqsr.Icon.ImageTransparency = 0.65 end for i, kcaqs in pairs(qs.sections) do  a:Tween(kcaqs.container.Parent, {Size = UDim2.new(1, -10, 0, 28)}, 0.1) a:Tween(kcaqs.container.Title, {TextTransparency = 1}, 0.1) end wait(0.1) qs.lastPosition = qs.container.CanvasPosition.Y qs:Resize() end end function qs:Resize(scroll) local ndm = 10 local g = 0 for i, kcaqs in pairs(self.sections) do g = g + kcaqs.container.Parent.AbsoluteSize.Y + ndm end self.container.CanvasSize = UDim2.new(0, 0, 0, g) self.container.ScrollBarImageTransparency = g > self.container.AbsoluteSize.Y if scroll then a:Tween(self.container, {CanvasPosition = Vector2.new(0, self.lastPosition or 0)}, 0.2) end end function kcaqs:Resize(smooth) if self.page.library.focusedPage ~= self.page then return end local ndm = 4 local g = (4 * ndm) + self.container.Title.AbsoluteSize.Y  for i, module in pairs(self.modules) do g = g + module.AbsoluteSize.Y + ndm end if smooth then a:Tween(self.container.Parent, {Size = UDim2.new(1, -10, 0, g)}, 0.05) else self.container.Parent.Size = UDim2.new(1, -10, 0, g) self.page:Resize() end end function kcaqs:getModule(info) if table.find(self.modules, info) then return info end for i, module in pairs(self.modules) do if (module:FindFirstChild("\84\105\116\108\101") or module:FindFirstChild("\84\101\120\116\66\111\120", true)).Text == info then return module end end error("\78\111\32\109\111\100\117\108\101\32\102\111\117\110\100\32\117\110\100\101\114\32"..tostring(info)) end function kcaqs:updateButton(aqsr, title) aqsr = self:getModule(aqsr) aqsr.Title.Text = title end function kcaqs:updateToggle(caqsr, title, lb_ji) caqsr = self:getModule(caqsr) local hgn = { In = UDim2.new(0, 2, 0.5, -6), Out = UDim2.new(0, 20, 0.5, -6) } local caq = caqsr.Button.Frame lb_ji = lb_ji and "\79\117\116" or "\73\110" if title then caqsr.Title.Text = title end a:Tween(caq, { Size = UDim2.new(1, -22, 1, -9), Position = hgn[lb_ji] + UDim2.new(0, 0, 0, 2.5) }, 0.2) wait(0.1) a:Tween(caq, { Size = UDim2.new(1, -22, 1, -4), Position = hgn[lb_ji] }, 0.1) end function kcaqs:updateTextbox(hg, title, lb_ji) hg = self:getModule(hg) if title then hg.Title.Text = title end if lb_ji then hg.Button.Textbox.Text = lb_ji end end function kcaqs:updateKeybind(r, title, caqs) r = self:getModule(r) local pthgn = r.Button.Text local fpt = self.binds[r] if title then r.Title.Text = title end if fpt.connection then fpt.connection = fpt.connection:UnBind() end if caqs then self.binds[r].connection = a:BindToKey(caqs, fpt.callback) pthgn.Text = caqs.Name else pthgn.Text = "\78\111\110\101" end return caqs end function kcaqs:updateColorPicker(kca, title, gndm) kca = self:getModule(kca) local ofpthg = self.colorpickers[kca] local iof = ofpthg.tab local jiof = ofpthg.callback if title then kca.Title.Text = title iof.Title.Text = title end local _ji local b_, sat, brightness if type(gndm) == "\116\97\98\108\101" then  b_, sat, brightness = unpack(gndm) _ji = Color3.fromHSV(b_, sat, brightness) else _ji = gndm b_, sat, brightness = Color3.toHSV(_ji) end a:Tween(kca.Button, {ImageColor3 = _ji}, 0.5) a:Tween(iof.Container.Color.Select, {Position = UDim2.new(b_, 0, 0, 0)}, 0.1) a:Tween(iof.Container.Canvas, {ImageColor3 = Color3.fromHSV(b_, 1, 1)}, 0.5) a:Tween(iof.Container.Canvas.Cursor, {Position = UDim2.new(sat, 0, 1 - brightness)}, 0.5) for i, kc in pairs(iof.Container.Inputs:GetChildren()) do if kc:IsA("\73\109\97\103\101\76\97\98\101\108") then local lb_ji = math.clamp(_ji[kc.Name], 0, 1) * 255 kc.Textbox.Text = math.floor(lb_ji) end end end function kcaqs:updateSlider(ndmkc, title, lb_ji, min, max, lvalue) ndmkc = self:getModule(ndmkc) if title then ndmkc.Title.Text = title end local rlb = ndmkc.Slider.Bar local srl = (p.X - rlb.AbsolutePosition.X) / rlb.AbsoluteSize.X if lb_ji then  srl = (lb_ji - min) / (max - min) end srl = math.clamp(srl, 0, 1) lb_ji = lb_ji or math.floor(min + (max - min) * srl) ndmkc.TextBox.Text = lb_ji a:Tween(rlb.Fill, {Size = UDim2.new(srl, 0, 1, 0)}, 0.1) if lb_ji ~= lvalue and ndmkc.ImageTransparency == 0 then a:Pop(ndmkc, 10) end return lb_ji end function kcaqs:updateDropdown(jio, title, lb_j, jiof) jio = self:getModule(jio) if title then jio.Search.TextBox.Text = title end local qsrlb = 0 a:Pop(jio.Search, 10) for i, aqsr in pairs(jio.List.Frame:GetChildren()) do if aqsr:IsA("\73\109\97\103\101\66\117\116\116\111\110") then aqsr:Destroy() end end for i, lb_ji in pairs(lb_j or {}) do local aqsr = a:Create("\73\109\97\103\101\66\117\116\116\111\110", { Parent = jio.List.Frame, BackgroundTransparency = 1, BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 30), ZIndex = 2, Image = "\114\98\120\97\115\115\101\116\105\100\58\47\47\53\48\50\56\56\53\55\52\55\50", ImageColor3 = k.DarkContrast, ScaleType = Enum.ScaleType.Slice, SliceCenter = Rect.new(2, 2, 298, 298) }, { a:Create("\84\101\120\116\76\97\98\101\108", { BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 0), Size = UDim2.new(1, -10, 1, 0), ZIndex = 3, Font = Enum.Font.Gotham, Text = lb_ji, TextColor3 = k.TextColor, TextSize = 12, TextXAlignment = "\76\101\102\116", TextTransparency = 0.10000000149012 }) }) aqsr.MouseButton1Click:Connect(function() if jiof then jiof(lb_ji, function(...) self:updateDropdown(jio, ...) end)  end self:updateDropdown(jio, lb_ji, nil, jiof) end) qsrlb = qsrlb + 1 end local caq = jio.List.Frame a:Tween(jio, {Size = UDim2.new(1, 0, 0, (qsrlb == 0 and 30) or math.clamp(qsrlb, 0, 3) * 34 + 38)}, 0.3) a:Tween(jio.Search.Button, {Rotation = lb_j and 180 or 0}, 0.3) if qsrlb > 3 then for i, aqsr in pairs(jio.List.Frame:GetChildren()) do if aqsr:IsA("\73\109\97\103\101\66\117\116\116\111\110") then aqsr.Size = UDim2.new(1, -6, 0, 30) end end caq.CanvasSize = UDim2.new(0, 0, 0, (qsrlb * 34) - 4) caq.ScrollBarImageTransparency = 0 else caq.CanvasSize = UDim2.new(0, 0, 0, 0) caq.ScrollBarImageTransparency = 1 end end end return library
